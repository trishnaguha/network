#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2019 Red Hat
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

##############################################
################# WARNING ####################
##############################################
###
### This file is auto generated by the resource
###   module builder playbook.
###
### Do not edit this file manually.
###
### Changes to this file will be over written
###   by the resource module builder.
###
### Changes should be made in the model used to
###   generate this file or in the resource module
###   builder template.
###
##############################################
##############################################
##############################################

"""
The module file for nxos_interfaces
"""

from __future__ import absolute_import, division, print_function
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.ansible_network.network.plugins.module_utils. \
     nxos.config.interfaces.interfaces import Interfaces

ANSIBLE_METADATA = {'metadata_version': '1.1',
                    'status': [u'preview'],
                    'supported_by': [u'Ansible Network']}


DOCUMENTATION = """
---
module: nxos_interfaces
version_added: 2.9
short_description: Manages Interfaces attributes of NX-OS Interfaces.
description: [u'Manages Interfaces attributes of NX-OS Interfaces.']
author: [u'Trishna Guha (@trishnaguha)']
options:
  config:
    description: The provided configuration
    suboptions:
      description:
        description:
        - Interface description.
        type: str
      duplex:
        default: auto
        description:
        - Interface link status. Applicable for ethernet interface only.
        type: str
      enable:
        default: true
        description:
        - Administrative State of interface.
        type: bool
      fabric_forwarding_anycast_gateway:
        description:
        - Associate SVI with anycast gateway under VLAN configuration mode. Applicable
          for SVI interface only.
        type: bool
      ip_forward:
        description:
        - Enable/Disable ip forward feature on SVIs.
        type: bool
      mode:
        description:
        - Manage Layer2 or Layer3 state of the interface. Applicable for Ethernet
          and portchannel interface only.
        type: str
      mtu:
        description:
        - MTU for a specific interface. Must be an even number between 576 and 9216.
          Applicable for Ethernet interface only.
        type: str
      name:
        description:
        - Full name of interface, i.e. Ethernet1/1, port-channel10.
        type: str
      speed:
        description:
        - Interface link speed. Applicable for ethernet interface only.
        type: str
  state:
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    default: merged
    description:
    - The state the configuration should be left in
    type: str

"""

EXAMPLES = """
---

# Using merged

- name: Configure Eth interfaces
  nxos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
      - name: Ethernet1/2
        description: 'Configured by Ansible Network'
        enable: False
	mode: layer3
    operation: merged

# Using replaced

- name: Configure mentioned interfaces and replace existing config
  nxos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
	mtu: 2000
      - name: Ethernet1/2
        description: 'Configured by Ansible Network'
        enable: False
	mode: layer2
    operation: replaced

# Using overridden

- name: Override interfaces
  nxos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
	mode: layer3
      - name: Ethernet1/2
        description: 'Configured by Ansible Network'
        enable: False
	speed: 1000
    operation: overridden

# Using deleted

- name: Delete given arguments for the interface
  nxos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
      - name: Ethernet1/2
        description: 'Configured by Ansible Network'
        mtu: 1800
    operation: deleted
"""

RETURN = """
before:
  description: The configuration prior to the model invocation
  returned: always
  sample: 
    {
    "before": [
        {
            "enable": true, 
            "name": "Ethernet1/1"
        }, 
        {
            "enable": true, 
            "name": "Ethernet1/2"
        },
    }
after:
  description: The resulting configuration model invocation
  returned: when changed
  sample:
    {
    "after": [
        {
            "description": "Configured by Ansible", 
            "enable": false, 
            "name": "Ethernet1/1"
        }, 
        {
            "description": "Configured by Ansible Network", 
            "enable": false, 
            "name": "Ethernet1/2"
        },
    }
commands:
  description: The set of commands pushed to the remote device
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Interfaces.argument_spec,
                           supports_check_mode=True)

    result = Interfaces(module).execute_module()
    module.exit_json(**result)

if __name__ == '__main__':
    main()
